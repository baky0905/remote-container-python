#https://www.docker.com/blog/containerized-python-development-part-1/

# set base image (host OS)
FROM ubuntu:20.04

# [Optional] If your requirements rarely change, uncomment this section to add them to the image.
COPY ./requirements.txt /tmp/pip-tmp/

WORKDIR /tmp/pip-tmp/

RUN apt-get update && \
    apt-get -y upgrade && \
    apt-get install -y \
    python3-pip  \
    python3-dev  \
    build-essential  \
    libssl-dev  \
    libffi-dev  \
    python3-setuptools \
    python3-venv \
    wget \
    curl \
    git \
    procps \
    sqlite3 \
    libsqlite3-dev 
#python3.8-dev

# Install the Microsoft ODBC driver for SQL Server (Linux)
# https://docs.microsoft.com/en-us/sql/connect/odbc/linux-mac/installing-the-microsoft-odbc-driver-for-sql-server?view=sql-server-ver15

RUN curl https://packages.microsoft.com/keys/microsoft.asc | apt-key add -
RUN curl https://packages.microsoft.com/config/ubuntu/20.04/prod.list > /etc/apt/sources.list.d/mssql-release.list
RUN exit

RUN apt-get update && ACCEPT_EULA=Y apt-get install -y msodbcsql17 

# # optional: for bcp and sqlcmd
# RUN  ACCEPT_EULA=Y apt-get install mssql-tools
# RUN  'export PATH="$PATH:/opt/mssql-tools/bin"' >> ~/.bash_profile
# RUN 'export PATH="$PATH:/opt/mssql-tools/bin"' >> ~/.bashrc
# RUN . ~/.bashrc
# # optional: for unixODBC development headers
RUN apt-get install -y unixodbc-dev

# RUN apt-get update && apt-get install -y


#RUN pip3 --disable-pip-version-check --no-cache-dir install -r /tmp/pip-tmp/requirements.txt \
#    && rm -rf /tmp/pip-tmp \
#    pip3 install wheel

RUN pip3 install --requirement /tmp/pip-tmp/requirements.txt
COPY . /tmp/

# Set the default shell to bash instead of sh
ENV SHELL /bin/bash

